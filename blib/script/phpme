#!/usr/bin/perl

eval 'exec /usr/bin/perl  -S $0 ${1+"$@"}'
    if 0; # not running under some shell
# phpme: command-line utility for turning directories into Eclipse PHP projects

use strict;

use File::Basename;
use File::Copy::Recursive qw(fcopy rcopy dircopy);
use Cwd qw(abs_path);

# Files to be created. Some of them have strings like __name__, that are replaced 
# by the name of the project. Others variables could be configured as well.
my $dotproject = <<END;
<?xml version="1.0" encoding="UTF-8"?>
<projectDescription>
    <name>__name__</name>
    <comment></comment>
    <projects>
    </projects>
    <buildSpec>
        <buildCommand>
            <name>org.eclipse.wst.validation.validationbuilder</name>
            <arguments>
            </arguments>
        </buildCommand>
        <buildCommand>
            <name>org.eclipse.dltk.core.scriptbuilder</name>
            <arguments>
            </arguments>
        </buildCommand>
    </buildSpec>
    <natures>
        <nature>org.eclipse.php.core.PHPNature</nature>
    </natures>
</projectDescription>
END

my $dotbuildpath = <<END;
<?xml version="1.0" encoding="UTF-8"?>
<buildpath>
    <buildpathentry kind="src" path=""/>
    <buildpathentry kind="con" path="org.eclipse.php.core.LANGUAGE"/>
</buildpath>
END

my $prefs = <<END;
eclipse.preferences.version=1
include_path=0;/__name__
END

# The PHP project directory
my $dir = shift;

# Check if the path exists and is a directory
if(!-e $dir) {
    die($dir, " doesn't exist.");
}
if(!-d $dir) {
    die($dir, " is not a directory.");
}

$dir = abs_path($dir);

# The name of the project will be the directory name
my $name = fileparse($dir);

# .project
$dotproject =~ s/__name__/$name/;
open(DOTPROJECT, ">>$dir/.project");
print DOTPROJECT $dotproject;
close(DOTPROJECT);

# .buildpath
open(BUILDPATH, ">>$dir/.buildpath");
print BUILDPATH $dotbuildpath;
close(BUILDPATH);

# .settings/org.eclipse.php.core.prefs
mkdir("$dir/.settings") or die('Error creating .settings directory: ' . $!);
$prefs =~ s/__name__/$name/;
open(SETTINGS, ">>$dir/.settings/org.eclipse.php.core.prefs");
print SETTINGS $prefs;
close(SETTINGS);

print "OK!\n";

#################### DOCUMENTATION ###################

=head1 NAME

phpme - Turns any directory into an Eclipse PDT PHP project

=head1 VERSION

This document references version 0.01 of Eclipse::PHPMe.

=head1 USAGE

At the command prompt:
  
  % phpme <directory>

=head1 DESCRIPTION

A simple module for transforming any directory into an Eclipse PDT PHP project. 

=head1 BUGS

https://github.com/kinow/eclipse_phpme/issues

=head1 AUTHOR

    Bruno P. Kinoshita
    CPAN ID: kinow
    TupiLabs
    brunodepaulak@yahoo.com.br
    http://www.kinoshita.eti.br

=head1 COPYRIGHT

This program is free software licensed under the...

    The MIT License

The full text of the license can be found in the
LICENSE file included with this module.

=cut

#################### main pod documentation end ###################


1;
# The preceding line will help the module return a true value